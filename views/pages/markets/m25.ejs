<table border="0" cellspacing="5" cellpadding="5">
  <tbody>
    <tr>
      <td>Minimum ATV(5):</td>
      <td><input type="text" id="minAtv5" name="min"></td>

      <td>Maximum ATV(5):</td>
      <td><input type="text" id="maxAtv5" name="max"></td>
    </tr>
  </tbody>
</table>
<table class="table table-bordered table-sm mb-0 text-center table-striped" id="dataTable" style="width:100%">
  <thead>
    <th>Ticker</th>
    <th>ATV(5)</th>
    <th>CVx2 signal</th>
    <th>CVx2 from</th>
    <th>ATV</th>
    <th>MCDX signal</th>
    <th>MCDX from</th>
    <th>Red-PC</th>
    <th>Red(10)</th>
    <th>VIX signal</th>
    <th>VIX from</th>
    <th>VIX</th>
    <th>VIX Max</th>
    <th>VIX Min</th>
    <th>VIX diff</th>
    <th>Total(5d)</th>
    <th>Status</th>
  </thead>
  <tbody></tbody>
</table>
<%- contentFor('customScripts') %>
<script src="/js/market.js"></script>
<script>
  var ATV5Index = 1;
  var datatable = 
  $('#dataTable').DataTable({
    aaSorting: [],
    ajax: `/api/markets/m25`,
    pageLength: 15,
    bLengthChange: false,
    scrollX: true,
    scrollCollapse: true,
    dom: 'Bfrtip',
    buttons: ['copy', 'excel', 'csv', 'pdf', 'print'],
    columns: [
      { data : "TICKER", render: function (data) {
        var htmlString = `<a href="/summary/${data}" target="_blank">${data}</a>`
        return htmlString;
      }},
      { data: 'CV5' , render: function ( data ) { return (data/10).toFixed(2);} },
      { data: 'CVSIG' ,render: function(data) {
        if (data > 0) {
          return '<span class="badge badge-success">YES</span>';
        } else {
          return '<span class="badge badge-danger"> NO </span>'
        };
      }},
      { data: 'CVBAR' },
      { data: 'CV' , render: function ( data ) { return (data/10).toFixed(2);} },
      { data: 'MCDXSIG' ,render: function(data) {
        if (data > 0) {
          return '<span class="badge badge-success">YES</span>';
        } else {
          return '<span class="badge badge-danger"> NO </span>';
        }
      }},
      { data: 'MCDXBAR' },
      { data: 'PC' , render: function (data) { return (+data/100).toFixed(2);}},
      { data: 'PC10' , render: function (data) { return (+data/100).toFixed(2);}},
      { data: 'VIXSIG' ,render: function(data) {
        if (data > 0) {
          return '<span class="badge badge-success">YES</span>';
        } else {
          return '<span class="badge badge-danger"> NO </span>';
        }
      }},                 
      { data: 'VIXBAR' },
      { data: 'VIX' , render: function (data){ return (+data/100).toFixed(2);} },
      { data: 'VIXH52W' , render: function (data){ return (+data/100).toFixed(2);} },
      { data: 'VIXL52W' , render: function (data){ return (+data/100).toFixed(2);} },
      { data: 'vixdiff' , render: function (data){ return (+data/100).toFixed(2);} },
      { data: 'TOTALSIG' ,render: function(data) {
        if (data > 0) {
          return '<p class="mb-0 text-success">'+data+'</p>';
        } else {
          return data
        }
      }},
      { data: 'STATUS', render: function(data) {
          switch (data) {
            case 'LONG':
            return '<span class="badge badge-success"> LONG </span>' ;
                break;
            case 'SHORT':
            return '<span class="badge badge-danger">SHORT</span>' ;
                break;
            case 'HOLDL':
            return '<span class="badge badge-warning">HOLD</span> <span class="badge badge-success"> L </span>' ;
                break;
            case 'HOLDS':
            return '<span class="badge badge-warning">HOLD</span> <span class="badge badge-danger"> S </span>' ;
                break;
          }
      }},        
    ]
  });
</script>